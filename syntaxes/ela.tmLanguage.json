{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "easylang",
  "patterns": [
    {
      "include": "#comment"
    },
    {
      "include": "#number"
    },
    {
      "include": "#string"
    },
    {
      "include": "#operator"
    },
    {
      "include": "#const"
    },
    {
      "include": "#keyword"
    },
    {
      "include": "#params"
    },
    {
      "include": "#ident"
    }
  ],
  "repository": {
    "keyword": {
      "patterns": [
        {
          "name": "keyword.control.ela",
          "match": "\\b(if|else|for|in|while|return|break|continue|block)\\b"
        }
      ]
    },
    "string": {
      "name": "string.quoted.double.ela",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.ela",
          "match": "\\\\."
        }
      ]
    },
    "number": {
      "patterns": [
        {
          "name": "constant.numeric.binary.ela",
          "match": "\\b0(?:b|B)[01]+(?:_?[01]+)*\\.?[01]*(?:_?[01]+)*\\b"
        },
        {
          "name": "constant.numeric.octal.ela",
          "match": "\\b0(?:o|O)[0-7]+(?:_?[0-7]+)*\\.?[0-7]*(?:_?[0-7]+)*\\b"
        },
        {
          "name": "constant.numeric.digit.ela",
          "match": "\\b[0-9]+(?:_?[0-9]+)*\\.?[0-9]*(?:_?[0-9]+)*\\b"
        },
        {
          "name": "constant.numeric.hex.ela",
          "match": "\\b0(?:x|X)[0-9a-fA-F]+(?:_?[0-9a-fA-F]+)*\\.?[0-9a-fA-F]*(?:_?[0-9a-fA-F]+)*\\b"
        }
      ]
    },
    "operator": {
      "name": "keyword.operator",
      "match": "==|!=|<=|>=|and|or|<|>|\\+|-|\\*|/|%|-|not"
    },
    "comment": {
      "name": "comment.line.number-sign.ela",
      "begin": "#",
      "end": "\n"
    },
    "ident": {
      "name": "variable.name.ela",
      "match": "\\b[a-zA-Z_](?:[a-zA-Z_]|[0-9])*\\b"
    },
    "const": {
      "patterns": [
        {
          "name": "constant.language.ela",
          "match": "\\b(true)\\b"
        },
        {
          "name": "constant.language.ela",
          "match": "\\b(false)\\b"
        },
        {
          "name": "constant.language.ela",
          "match": "\\b(none)\\b"
        },
        {
          "name": "constant.language.ela",
          "match": "\\b(inf)\\b"
        }
      ]
    },
    "params": {
      "name": "variable.parameter.list.ela",
      "begin": "\\|",
      "end": "\\|\\s*=>\\s*",
      "patterns": [
        {
          "name": "variable.parameter.ela",
          "match": "[a-zA-Z_](?:[a-zA-Z_]|[0-9])*"
        }
      ]
    }
  },
  "scopeName": "source.ela"
}
